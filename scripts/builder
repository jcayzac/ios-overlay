#!/bin/bash

if [ -z "${IOS_SOURCED_BUILDER}" ]
then
	IOS_SOURCED_BUILDER=1

	#TODO: Activate this and sanitize the rest of the code
	# To detect if a variable VAR is set: "${VAR+1}" == "1"
	#set -o nounset

	# Save current dir so we can restore it before exiting
	IOS_CURRENT_DIR=$(pwd)

	# Determine where the package is,
	# and what's ios-overlay install dir.
	IOS_SELF="$0"
	IOS_PACKAGE_DIR=${0%/*}
	if [ -z "$IOS_PACKAGE_DIR" ]
	then
		IOS_PACKAGE_DIR="."
	fi
	cd "${IOS_PACKAGE_DIR}"
	IOS_PACKAGE_DIR=$(pwd)
	IOS_SELF="${IOS_PACKAGE_DIR}/${IOS_SELF##*/}"
	cd ../..
	IOS_OVERLAY_PATH=$(pwd)
	cd "${IOS_CURRENT_DIR}"

	# Create /iOS_SDK_Overlay link if needed
	# Warning: DO NOT *SOURCE* IT
	"${IOS_OVERLAY_PATH}/scripts/check-root-link"
	if [ $? != 0 ]
	then
		echo "*** Failed to create symlink"
		exit 1
	fi

	# Set the rest of the environment
	. "${IOS_OVERLAY_PATH}/scripts/set-environment"

	# Load functions
	. "${IOS_OVERLAY_PATH}/scripts/functions"
	cat <<-EOT
	* Installing package [01;32m${IOS_PACKAGE_WITH_VERSION}[00m for [01;32miOS ${IOS_SDK}[00m:
	         Source: [01;32m${DOWNLOAD_URL}[00m
	      Build dir: [01;32m${IOS_BUILD_DIR}[00m
	    Destination: [01;32m${IOS_OVERLAY_PATH}[00m
	
	EOT

	ios_check_license && \
	ios_download_file && \
	ios_uncompress && \
	ios_autopatch && \
	ios_build_all

	ios_restore_current_dir
	echo "    All done!"
fi

